应用层http, 左边客户端 右边服务端, 可能在通信时发送过来的数据可能是有很多信息的, (发消息, 也显示头像和昵称...) 单个发送容易导致混淆, 把四个字符串编程一个大字符串(序列化)发送过去(把数据发送到网络当中), 对方解析(反序列化---把数据从网络当中拿出来) ---json
   userinfo: apikey
   userid: 密钥
  图灵机器人: 实现智能的文本交互(只需HTTP客户端即可) 
  百度AI平台: 语音识别(把语音转文本)
              语音合成(把文本转语音)
client主机: 
    1. 对我们的程序: jarvis 说一句话(讲话)
    2. 录音, 并语音识别(调用百度AI) 语音转文本
    3. 返回语音识别结果(文本)
    4. jarvis对文本进行判定,
        a. 如果是命令(帮我关机/打开计算机...), 就让jarvis去执行命令
        b. 如果不是命令, (只是想互动,并不是想让执行/ 你多大了?/男的女的?...), 把文本转给图灵机器人
            5. 图灵机器人应答, 得到应答文本
            6. 把文本再转给百度AI实现文本转语音(语音合成), 本地播放语音
一个完整的json是以{  }结束的
    {
        key: value
    }
    {
        key:{
            key:value,
            key:value
        },
        key:value
    }

    1. 如何把多个属性对转化为一个json字符串, 方便发送( 序列化 )
    2. json发送给对方, 对方需要考虑把一个json 转化为多个属性对, 方便后续使用(反序列化)
    网络通讯,以及我们使用的第三方平台图灵机器人需要的语法格式, 百度AI都是json

    序列化: 就是把json::value(万能对象, 填充的是key,value)转化为字符串
        多个字符串 => Json::Value => 序列化, 一个json串
        一个json串,反序列化 => Json::Value => 一个Json串, 变成多个字符串

writer (序列化)        ---->       value     --->            reader(反序列化)           json串到字符串           


writer (序列化)        <----       value     <---            reader(反序列化)            字符串返回



